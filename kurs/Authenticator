#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <openssl/sha.h>
#include <unistd.h>

int Authenticator_authenticate(int sockfd, const char* login, const char* password) {
    unsigned char salt[8];
    for (int i = 0; i < sizeof(salt); i++) {
        salt[i] = rand() % 256;
    }

    char salt16[17];
    for (int i = 0; i < sizeof(salt); i++) {
        sprintf(&salt16[i * 2], "%02X", salt[i]);
    }
    salt16[16] = '\0';

    char to_hash[512];
    sprintf(to_hash, "%s%s", salt16, password);

    unsigned char hash[SHA_DIGEST_LENGTH];
    SHA1((unsigned char*)to_hash, strlen(to_hash), hash);

    char hash_hex[SHA_DIGEST_LENGTH * 2 + 1];
    for (int i = 0; i < SHA_DIGEST_LENGTH; ++i) {
        sprintf(&hash_hex[i * 2], "%02X", hash[i]);
    }
    hash_hex[SHA_DIGEST_LENGTH * 2] = '\0';

    char msg[1024];
    snprintf(msg, sizeof(msg), "%s %s%s", login, salt16, hash_hex);

    send(sockfd, msg, strlen(msg), 0);

    char response[4];
    int ret = recv(sockfd, response, 3, 0);
    response[ret] = '\0';

    return strcmp(response, "OK") == 0;
}
